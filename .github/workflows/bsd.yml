name: BSD CI

on: [push, pull_request]

jobs:
  build:
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
    runs-on: ubuntu-latest
    strategy:
      matrix:
        operating_system: [ freebsd, netbsd, openbsd ]
        architecture: [ arm64, x86-64 ]
        include:
          - operating_system: freebsd
            version: '14.2'
            pkginstall: sudo pkg install -y alsa-lib ccache cmake evdev-proto git libao libevdev libudev-devd libzip lua54 miniupnpc ninja pkgconf pulseaudio sdl2 libcdio
          - operating_system: netbsd
            version: '10.1'
            pkginstall: sudo pkgin update && sudo pkgin -y install alsa-lib ccache cmake gcc12 git libao libzip lua54 miniupnpc ninja-build pkgconf pulseaudio SDL2 libcdio && export PATH=/usr/pkg/gcc12/bin:$PATH
          - operating_system: openbsd
            version: '7.6'
            pkginstall: sudo pkg_add ccache cmake git libao libzip miniupnpc ninja pkgconf pulseaudio sdl2 libcdio
        exclude:
          - architecture: arm64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.operating_system }}-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: ccache-${{ matrix.operating_system }}-${{ matrix.architecture }}-

      - uses: cross-platform-actions/action@v0.27.0
        with:
          operating_system: ${{ matrix.operating_system }}
          architecture: ${{ matrix.architecture }}
          version: ${{ matrix.version }}
          environment_variables: CCACHE_DIR
          run: |
            ${{ matrix.pkginstall }}
            cmake -B build -DUSE_LIBCDIO=ON -DCMAKE_BUILD_TYPE=Release -G Ninja
            cmake --build build --config Release
